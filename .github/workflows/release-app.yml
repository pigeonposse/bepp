###############################################################################
# RELEASE APPS
# @observations: Only compatible commands must be entered for all platforms. 
#                For example: avoid $@, since windows does not accept it
###############################################################################
name: üöÄüñ•Ô∏è Release APPs
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Set number for release version'
        type: string
        required: true
env:
  GITHUB_TOKEN: ${{ github.token }}


###############################################################################
# JOBS
###############################################################################

jobs:
  release_apps:
    permissions:
      contents: write
      deployments: write
    strategy:
      fail-fast: false
      matrix:
        # @see https://github.com/actions/runner-images
        settings:
          - platform: 'macos-14' # this is arm64
            args: '--target universal-apple-darwin' # build x64, arm64 and universal
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    timeout-minutes: 20
    runs-on: ${{ matrix.settings.platform }}
    env:
      UPDATED_VERSION: ${{ github.event.inputs.version }}

    steps:

      #########################################################################
      # INIT & INSTALL
      #########################################################################

      - name: ‚¨áÔ∏èüõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
      - name: ‚¨áÔ∏èüõé Checkout
        uses: actions/checkout@v4
      - name: ‚¨áÔ∏èü•° Install pnpm
        uses: pnpm/action-setup@v4
      - name: ‚¨áÔ∏èüü¢ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: ‚¨áÔ∏èü¶Ä Rust setup (macos only)
        if: matrix.settings.platform == 'macos-14'
        uses: dtolnay/rust-toolchain@stable
        with:
          # Note that compiling an universal macOS application requires both `aarch64-apple-darwin` and `x86_64-apple-darwin` targets to be installed.
          targets: 'aarch64-apple-darwin,x86_64-apple-darwin'
          toolchain: stable

      - name: ‚¨áÔ∏èü¶Ä Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: ‚¨áÔ∏èü¶Ä install dependencies (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: ‚¨áÔ∏èüì¶ Install dependencies
        run: |
          pnpm install --no-frozen-lockfile

      - name: üì¶üìÑ Get package.json name
        id: pkg
        run: |
          echo "name=$(jq -r '.extra.productName' ./package.json)" >> $GITHUB_OUTPUT
          echo "description=$(jq -r '.description' ./package.json)" >> $GITHUB_OUTPUT
          echo "homepage=$(jq -r '.homepage' ./package.json)" >> $GITHUB_OUTPUT
          echo "docs=$(jq -r '.extra.docsUrl' ./package.json)" >> $GITHUB_OUTPUT
          echo "repo=$(jq -r '.repository.url' ./package.json)" >> $GITHUB_OUTPUT
          {
            echo 'release_body<<EOF'
            pnpm --silent get-release-body
            echo EOF
          } >> "$GITHUB_OUTPUT"


      #########################################################################
      # BUILD REQUERIMENTS FOR APP
      #########################################################################
   
      - name: üèó Build
        run: pnpm build:app # Is necessary set manually for windows 

      #########################################################################
      # APP - BUILD & RELEASE DESKTOP APP
      #
      # @see https://github.com/tauri-apps/tauri-action?tab=readme-ov-file#inputs
      # @see https://github.com/tauri-apps/tauri-action?tab=readme-ov-file#build-options
      #########################################################################

      - name: üñ•Ô∏è Build app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          projectPath: 'packages/app'
          tagName: "${{ env.UPDATED_VERSION }}" 
          releaseName: '${{ steps.pkg.outputs.name }} v${{ env.UPDATED_VERSION }}'
          releaseBody: |
            ${{steps.pkg.outputs.release_body}}
          releaseDraft: false
          prerelease: false
          includeUpdaterJson: true
          updaterJsonKeepUniversal: true 
          includeRelease: true
          tauriScript: pnpm exec tauri # This is because the tauri script has $@ and Windows does not support it.
          args: ${{ matrix.settings.args }}

      - name: üñ•Ô∏è Build app (macos x64)
        if: matrix.settings.platform == 'macos-14'
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          projectPath: 'packages/app'
          tagName: "${{ env.UPDATED_VERSION }}"
          releaseName: '${{ steps.pkg.outputs.name }} v${{ env.UPDATED_VERSION }}'
          releaseDraft: false
          prerelease: false
          includeUpdaterJson: true
          updaterJsonKeepUniversal: true 
          includeRelease: true
          tauriScript: pnpm exec tauri 
          args: '--target x86_64-apple-darwin'

      - name: üñ•Ô∏è Build app (macos arm64)
        if: matrix.settings.platform == 'macos-14'
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          projectPath: 'packages/app'
          tagName: "${{ env.UPDATED_VERSION }}"
          releaseName: '${{ steps.pkg.outputs.name }} v${{ env.UPDATED_VERSION }}'
          releaseDraft: false
          prerelease: false
          includeUpdaterJson: true
          updaterJsonKeepUniversal: true 
          includeRelease: true
          tauriScript: pnpm exec tauri 
          args: '--target aarch64-apple-darwin'


############################################################################### 
