###############################################################################
# RELEASE BINS
###############################################################################

name: 🚀💾 Release Bins

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Set number for release version'
        type: string
        required: true

concurrency: ${{ github.workflow }}-${{ github.ref }}
env:
  GITHUB_TOKEN: ${{ github.token }}

###############################################################################
# JOBS
###############################################################################

jobs:
  deploy:
    runs-on: 'macos-14' # this is arm64
    env:
      UPDATED_VERSION: ${{ github.event.inputs.version }}

    steps:

      #########################################################################
      # INIT
      #########################################################################

      - name: ⬇️🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
      - name: ⬇️🛎 Checkout
        uses: actions/checkout@v4
      - name: ⬇️🥡 Install pnpm
        uses: pnpm/action-setup@v4
      - name: ⬇️🟢 Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: ⬇️📦 Install dependencies
        run: pnpm install --no-frozen-lockfile

      #########################################################################
      # BUILD PKG
      #########################################################################

      - name: 📦📄 Get package.json name
        id: pkg
        run: |
          {
            echo 'release_body<<EOF'
            pnpm --silent get-release-body
            echo EOF
           } >> "$GITHUB_OUTPUT"

      ###################################################################
      # BUILD AND DEPLOY
      ###################################################################

      - name: 🏗 Build package
        run: pnpm build:api # this build core and api

      - name: Release binaries
        uses: ncipollo/release-action@v1
        with: 
          tag: "${{ env.UPDATED_VERSION }}"
          draft: false
          prerelease: false
          allowUpdates: true
          artifacts: "packages/core/build/zip/*.zip,packages/api/build/zip/*.zip"
          body: |
            ${{steps.pkg.outputs.release_body}}
          omitBodyDuringUpdate: true


###############################################################################
