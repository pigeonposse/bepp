###############################################################################
# RELEASE BINS
###############################################################################

name: üöÄüê≥ Release Containers

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Set number for release version'
        type: string
        required: true

concurrency: ${{ github.workflow }}-${{ github.ref }}
env:
  GITHUB_TOKEN: ${{ github.token }}

###############################################################################
# JOBS
###############################################################################

jobs:
  deploy:
    runs-on: 'ubuntu-latest' 
    env:
      UPDATED_VERSION: ${{ github.event.inputs.version }}

    steps:

      #########################################################################
      # INIT
      #########################################################################

      - name: ‚¨áÔ∏èüõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
      - name: ‚¨áÔ∏èüõé Checkout
        uses: actions/checkout@v4
      - name: ‚¨áÔ∏èü•° Install pnpm
        uses: pnpm/action-setup@v4
      - name: ‚¨áÔ∏èüü¢ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

    #   - name: ‚¨áÔ∏èüì¶ Install dependencies
    #     run: pnpm install --no-frozen-lockfile

      - name: ‚¨áÔ∏èüê≥ Set up QEMU	
        uses: docker/setup-qemu-action@v1
      - name: ‚¨áÔ∏èüê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: üê≥‚òëÔ∏è Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: üê≥‚òëÔ∏è Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üì¶üìÑ Get package.json data
        id: pkg
        run: |
          echo "name=$(jq -r '.extra.productName' ./package.json)" >> $GITHUB_OUTPUT
          echo "description=$(jq -r '.description' ./package.json)" >> $GITHUB_OUTPUT
          echo "homepage=$(jq -r '.homepage' ./package.json)" >> $GITHUB_OUTPUT

      #########################################################################
      # PUSH IMAGE
      #########################################################################

      - name: üê≥üöÄ Build and push [API] image
        uses: docker/build-push-action@v4
        with:
          context: packages/container/src/api
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ github.repository }}:${{ env.UPDATED_VERSION }}-api
            ${{ github.repository }}:latest-api
            ghcr.io/${{ github.repository }}:${{ env.UPDATED_VERSION }}-api
            ghcr.io/${{ github.repository }}:latest-api

      - name: üê≥üöÄ Build and push [CLI] image
        uses: docker/build-push-action@v4
        with:
          context: packages/container/src/cli
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ github.repository }}:${{ env.UPDATED_VERSION }}-cli
            ${{ github.repository }}:latest-cli
            ghcr.io/${{ github.repository }}:${{ env.UPDATED_VERSION }}-cli
            ghcr.io/${{ github.repository }}:latest-cli

      # Build last for get tag 'latest' first in dockerhub 
      - name: üê≥üöÄ Build and push [APP] image 
        uses: docker/build-push-action@v4
        with:
          context: packages/container/src/app
          push: true
          platforms: linux/amd64,linux/arm64
          # leave 'ghcr.io/${{ github.repository }}:${{ env.UPDATED_VERSION }}' last so that the first one is seen on github
          tags: |
            ${{ github.repository }}:latest-app
            ${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:latest-app
            ghcr.io/${{ github.repository }}:latest
            ${{ github.repository }}:${{ env.UPDATED_VERSION }}-app
            ${{ github.repository }}:${{ env.UPDATED_VERSION }}
            ghcr.io/${{ github.repository }}:${{ env.UPDATED_VERSION }}-app
            ghcr.io/${{ github.repository }}:${{ env.UPDATED_VERSION }}

      #########################################################################
      # UPDATE DOCKERHUB DATA
      #########################################################################

      - name: üê≥üìù Update Docker Hub repo description
        uses: peter-evans/dockerhub-description@v3
        with:
          # @see https://github.com/peter-evans/dockerhub-description  
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          repository: ${{ github.repository }}
          short-description: ${{ steps.pkg.outputs.description }}
          readme-filepath: ./README.md


###############################################################################
